{##
 # test_entry_classfication_adjudicate.twig
 #
 # Adjudicate a classification type test.
 # @author Dean Inglis <inglisd@mcmaster.ca>
 # @see base_view.twig for parameters
 #}
{% extends "widget.twig" %}

{% block javascript %}

  {{ parent() }}

  <script type="text/javascript">

    var table_selector = "#{{ widget.full }}__adjudicate_table";

    function configure_ui() {
      var disable_submit = false;
      var has_non_status_fields =
        0 < $( table_selector + ' input:checkbox[value="all"]' ).length;
      var has_status_fields =
        0 < $( table_selector + ' select[id$="adjudicate"]' ).length;

      if( has_non_status_fields ) {
        $( table_selector + ' input:text[id$="adjudicate"]').each( function() {
          var id_1 = "#" + $(this).prop( "name" ).split( "__" )[0] + "__accept";
          var id_2 = "#" + $(this).prop( "name" ).split( "__" )[1] + "__accept";
          if( ! ( $( id_1 ).prop( "checked" ) || $( id_2 ).prop( "checked" ) ) &&
              0 == $(this).val().length ) {
            var blank_id = '#' + $(this).prop( "id" ).replace( "adjudicate", "blank" );
            if( ! $( blank_id ).prop( "checked" ) ) {
              disable_submit = true;
              return false;
            }
          }
        } );

        if( has_status_fields ) {
          var disable_non_status_fields = false;
          $( table_selector + ' select[id$="adjudicate"]' ).each( function() {
            var state = $(this).val();
            if( state == "unavailable" || state == "unusable" || state == "refused" ) {
              disable_non_status_fields = true;
              disable_submit = false;
              return false;
            }
          } );
          if( disable_non_status_fields ) {
            $( table_selector + ' input:radio[name$="adjudicate"]' ).prop( "disabled", true );
            $( table_selector + ' input:checkbox[value="all"]' ).prop( "disabled", true );
            $( table_selector + ' input:text[id$="adjudicate"]' ).prop( "disabled", true );
            $( table_selector + ' input:radio[value="accept"]' ).prop( "disabled", true );
          }
        }
      }

      $( "#{{ parent.full }}_submit" ).button( { disabled : disable_submit } );
    }

    // overrides the default autocomplete filter function to search only from the beginning
    // of the string
    $.ui.autocomplete.filter = function ( array, term ) {
      var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( term ), "i" );
      return $.grep( array, function ( value ) {
        return matcher.test( value.label || value.value || value );
      } );
    };

    function get_text_complete() {
      var args = new Object();
      args["dictionary_id"] = {{ dictionary_id }};
      args["intrusion_dictionary_id"] = {{ intrusion_dictionary_id }};
      args["variant_dictionary_id"] = {{ variant_dictionary_id }};
      args["language_id"] = {{ language_id }};
      args["words_only"] = 1;
      return ajax_pull( "word", "list", args );
    }

    $( function () {

      configure_ui();

      // find and handle radio input change events:
      // copy the progenitor to the adjudicate entry
      $( table_selector + ' input:radio[value="accept"]' ).change(
        function() {
          var entry_id = $(this).prop( "id" ).split( "__" )[0];
          var target_text_id = '#' + $(this).prop( "name" ) + "__adjudicate";
          var blank_id = target_text_id.replace( "adjudicate", "blank" );
          $( blank_id ).removeProp( "checked" );
          var source_text_id = '#' + entry_id + "__candidate";
          var candidate = $( source_text_id ).val();
          $( target_text_id ).removeClass( "candidate primary intrusion variant" );
          $( target_text_id ).addClass( $( source_text_id ).prop( "class" ) );
          $( target_text_id ).val( candidate );
          $( target_text_id ).attr( "value", candidate );
          $( target_text_id ).prop( "disabled", false );

          // push the edit
          var args = new Object();
          var columns = new Object();
          args.id = $(this).prop( "name" );
          if( 0 == candidate.length ) {
            columns["word_id"] = '';
          } else {
            columns["word_candidate"] = candidate;
          }
          args.columns = columns;

          // push the edits
          if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {
            // get the word
            if( 0 != candidate.length ) {
              var args = new Object();
              args.id = {{ test_id }};
              args["language_id"] = {{ language_id }};
              args["word_candidate"] = candidate;
              var classification = ajax_pull( "test", "classify_word", args );
              $( target_text_id ).addClass( classification );
            }
            configure_ui();
          } else {
            alert( "Entry was not accepted, try again." );
            // clear the text entry
            $( target_text_id ).val( "" );
            $( target_text_id ).attr( "value", "" );
            $( target_text_id ).focus( );
            $( this ).prop( "checked", false );
            $( this ).trigger( "click" );
          }
        } )
      .click( function () {

        $( table_selector + ' input:checkbox[value="all"]' ).removeProp( "checked" );

      } );// end radio input change and click

      $( table_selector + ' input:text[id$="adjudicate"]' ).autocomplete( {
        source: get_text_complete(),
        minLength: 1,
        select: function( event, ui ) {
          $(this).val( ui.item.value );
          $(this).attr( "value", ui.item.value );
        }
      } )
      .change( function() {
        // uncheck the progenitor radio items
        $( table_selector + ' input:radio[name="' +
          $(this).prop( "id" ).split( "__" )[0] + '"]' ).removeProp( "checked" );
        // uncheck the all checkboxes
        $( table_selector + ' input:checkbox[value="all"]' ).removeProp( "checked" );

        var candidate = $(this).val().trim().toLowerCase();
        // we've trimmed and lower-cased the candidate, so update the UI
        $(this).val( candidate );
        // update the value to present state
        $(this).attr( "value", candidate );
        $(this).removeClass( "candidate primary intrusion variant" );

        var args = new Object();
        var columns = new Object();
        args.id = $(this).prop( "id" ).split( "__" )[0];
        if( 0 == candidate.length ) {
          columns["word_id"] = '';
        } else {
          columns["word_candidate"] = candidate;
        }
        args.columns = columns;

        // flag to determine the submit button enable state
        var blank_id = '#' + $(this).prop( "id" ).replace( "adjudicate", "blank" );
        $( blank_id ).prop( "checked", 0 == candidate.length );

        // push the edits
        if( ajax_push( "{{ widget.subject }}", "edit", args ) ) {
          // get the word
          if( 0 != candidate.length ) {
            var args = new Object();
            args.id = {{ test_id }};
            args["language_id"] = {{ language_id }};
            args["word_candidate"] = candidate;
            var classification = ajax_pull( "test", "classify_word", args );
            $(this).addClass( classification );
            // if a variant, check and add the word if not in the autocomplete source
            if( classification == 'variant' ) {
              var text_selector = $( table_selector + ' input:text[id$="adjudicate"]' );
              var source = text_selector.autocomplete( "option", "source" );
              if( -1 == $.inArray( candidate, source ) ) {
                source.push( candidate );
                source.sort();
                text_selector.autocomplete( "option", "source", source );
              }
            }
          }

          configure_ui();
        } else {
          // clear the text entry and re-focus
          $(this).val( "" );
          $(this).attr( "value", "" );
          $(this).focus();
        }
      } );// end text input change

      $( table_selector + ' input:checkbox[value="all"]' ).click( function() {
        // toggle check state of companion All checkbox
        $( table_selector + ' input:checkbox[value="all"]' ).not($(this)).removeProp( "checked" );
        $(this).prop( "checked", $(this).prop( "checked" ) );
        $( table_selector + ' input:checkbox[value="blank"]' ).removeProp( "checked" );
        if( $(this).prop( "checked" ) ) {
          // check all the radio items corresponding to the progenitor column (1 or 2)?
          var id = $(this).prop( "id" ).split("__")[3];
          var radio_selector = table_selector + " div.radio__accept__" + id + " :radio";
          $('body').css( 'cursor', 'wait' );
          $( radio_selector ).prop( "checked", true ).trigger( "change" );
          $('body').css( 'cursor', 'auto' );
        } else {
          // uncheck all the radio items and clear the adjudicate text inputs
          $( table_selector + ' input:radio[value="accept"]' ).removeProp( "checked" );
          $text_selector = $( table_selector + ' input:text[id$="adjudicate"]' );
          $text_selector.prop( "disabled", true );
          // update previous and present state of value
          $text_selector.removeClass( "candidate primary intrusion variant" );
          $text_selector.val( "" );
          $text_selector.attr( "value", "" );
        }

        configure_ui();
      } );// end All checkbox click

      $( table_selector + ' input:radio[id$="__status__accept"]' ).change( function() {
        $source_select = $( table_selector +
          ' [id="' + $(this).prop( "id" ).replace( "__accept", "" ) + '"]' );
        var id = $(this).prop( "name" ).split( "__" )[0];
        var type = $(this).prop( "name" ).split( "__" )[1];
        var state = $source_select.val();
        var columns = new Object();
        columns[ type + '_status' ] = 'NULL' == state ? '' : state;
        var args = new Object();
        args.id = id;
        args.columns = columns;
        if( ajax_push( "{{ parent.subject }}", "edit", args ) ) {
          $target_select = $( table_selector +
            ' [id="' + $(this).prop( "name" ).replace( "accept", "adjudicate" ) + '"]' );
          $target_select.val( $source_select.val() );
          slot_refresh( {{ slot }} );
        }
      } );// end status radio input change

      $( table_selector + ' [id$="__status__adjudicate"]').change( function() {
        var id = $(this).prop( "id" ).split( "__" )[0];
        var type = $(this).prop( "id" ).split( "__" )[1];
        var state = $(this).val();
        var columns = new Object();
        columns[ type + '_status' ] = 'NULL' == state ? '' : state;
        var args = new Object();
        args.id = id;
        args.columns = columns;
        if( ajax_push( "{{ parent.subject }}", "edit", args ) ) {
          $( table_selector +
             ' input:radio[id$="' + type + '__status__accept"]' ).prop( 'checked', false );
          slot_refresh( {{ slot }} );
        }
      } ); // end adjudicate select change

    } );
  </script>

{% endblock javascript %}

{% block widget %}

  <div class="spacer"></div>
  <div id="{{ widget.full }}__adjudicate_table">
    <table>
      <thead>
        <tr style="height:40px">
          <th>Entry #</th>
          <th colspan="2">{{ user_1 }}</th>
          <th colspan="2">{{ user_2 }}</th>
          <th>Adjudication</th>
        </tr>
      </thead>
      <tbody>
      {% set disable_all_checkbox = true %}
      {% for entry in entry_data %}
        <tr>
          <td class="heading" style="text-align:center">{{ entry.rank }}</td>
          <td>
            <input type="text"
              id="{{ entry.id_1 }}__candidate"
              {% if entry.word_1 is defined %}
                value="{{ entry.word_1 }}"
                class="{{ entry.classification_1 }}"
              {% endif %}
              readonly/>
          </td>
          {% if entry.adjudicate|default(false) %}
          {% set disable_all_checkbox = false %}
            <td bgcolor=#B1F3B1>
              <div class="radio__accept__1">
                <input type="radio"
                  id="{{ entry.id_1 }}__accept"
                  name="{{ entry.id_3 }}"
                  value="accept"/>
                <label for="{{ entry.id_1 }}__accept">Accept</label>
              </div>
            </td>
          {% else %}
            <td></td>
          {% endif %}
          <td>
            <input type="text"
              id="{{ entry.id_2 }}__candidate"
              {% if entry.word_2 is defined %}
                value="{{ entry.word_2 }}"
                class="{{ entry.classification_2 }}"
              {% endif %}
              readonly/>
          </td>
          {% if entry.adjudicate|default(false) %}
            <td bgcolor=#B1F3B1>
              <div class="radio__accept__2">
                <input type="radio"
                  id="{{ entry.id_2 }}__accept"
                  name="{{ entry.id_3 }}"
                  value="accept"/>
                <label for="{{ entry.id_2 }}__accept">Accept</label>
              </div>
            </td>
            <td>
              <div class="adjudicate">
                <input type="text"
                  id="{{ entry.id_3 }}__adjudicate"
                  name="{{ entry.id_1 }}__{{ entry.id_2 }}"
                  {% if entry.word_id_3 is defined %}
                    value="{{ entry.word_3 }}"
                    class="{{ entry.classification_3 }}"
                  {% else %}
                    { disabled }
                  {% endif %} />
                <input type="checkbox"
                  id="{{ entry.id_3 }}__blank"
                  name="{{ entry.id_3 }}"
                  {{ entry.word_3 == "" ? "checked" : "" }}
                  readonly
                  disabled
                  value="blank"/>
              </div>
            </td>
          {% else %}
            <td></td><td></td>
          {% endif %}
        </tr>
      {% endfor %}
      {% if disable_all_checkbox == false %}
        <tr>
          <td colspan="2"></td>
          <td bgcolor=#B1F3B1>
            <input type="checkbox"
              id="{{ widget.full }}__accept__all__1"
              name="{{ widget.full }}__accept__all"
              value="all"/>
              <label for="{{ widget.full }}__accept__all__1">All</label>
          </td>
          <td></td>
          <td bgcolor=#B1F3B1>
            <input type="checkbox"
              id="{{ widget.full }}__accept__all__2"
              name="{{ widget.full }}__accept__all"
              value="all"/>
              <label for="{{ widget.full }}__accept__all__2">All</label>
          </td>
          <td></td>
        </tr>
      {% endif %}
      <tr style="height: 25px"><td colspan="6"></td></tr>
      {% for status in status_data %}
        <tr>
          <td class="heading">{{ status.status_label }}</td>
          <td>
            <select id="{{ status.id_1 }}__{{ status.status_type }}__status"
              class="ui-state-default"
              style="width: 100%"
              disabled>
              {% for status_id, status_value in status.status_list %}
                {% set status_display = status_value is defined ? status_value : "" %}
                <option{{ status.status_1 == status_id ? ' selected' : '' }}
                 value="{{ status_id }}">{{ status_display }}</option>
              {% endfor %}
            </select>
          </td>
          {% if status.adjudicate|default(false) %}
            <td bgcolor=#B1F3B1>
              <input type="radio"
                id="{{ status.id_1 }}__{{ status.status_type }}__status__accept"
                name="{{ status.id_3 }}__{{ status.status_type }}__status__accept"
                value="{{ status.status_type }}__status__accept"/>
              <label for="{{ status.id_1 }}__{{ status.status_type }}__status__accept">Accept</label>
            </td>
          {% else %}
            <td></td>
          {% endif %}
          <td>
            <select id="{{ status.id_2 }}__{{ status.status_type }}__status"
              class="ui-state-default"
              style="width: 100%"
              disabled>
              {% for status_id, status_value in status.status_list %}
                {% set status_display = status_value is defined ? status_value : "" %}
                <option{{ status.status_2 == status_id ? ' selected' : '' }}
                 value="{{ status_id }}">{{ status_display }}</option>
              {% endfor %}
            </select>
          </td>
          {% if status.adjudicate|default(false) %}
            <td bgcolor=#B1F3B1>
              <input type="radio"
                id="{{ status.id_2 }}__{{ status.status_type }}__status__accept"
                name="{{ status.id_3 }}__{{ status.status_type }}__status__accept"
                value="{{ status.status_type }}__status__accept"/>
              <label for="{{ status.id_2 }}__{{ status.status_type }}__status__accept">Accept</label>
            </td>
            <td>
            <select id="{{ status.id_3 }}__{{ status.status_type }}__status__adjudicate"
              class="ui-state-default"
              style="width: 100%">
              {% for status_id, status_value in status.status_list %}
                {% set status_display = status_value is defined ? status_value : "" %}
                <option{{ status.status_3 == status_id ? ' selected' : '' }}
                 value="{{ status_id }}">{{ status_display }}</option>
              {% endfor %}
            </select>
            </td>
          {% else %}
            <td></td><td></td>
          {% endif %}
        </tr>
      {% endfor %}
      </tbody>
    </table>
  </div>

{% endblock widget %}
