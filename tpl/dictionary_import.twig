{##
 # dictionary_import.twig
 #
 # Used to upload dictionary words from CSV data files
 # @author Dean Inglis <inglisd@mcmaster.ca>
 #}
{% extends "widget.twig" %}

{% block javascript %}
  <script type="text/javascript" src="{{ constant('JS_URL') }}/md5.js"></script>
  <script type="text/javascript">
    $( function() {
      $( "#{{ widget.full }}__file" ).change( function() {
        var file = this.files[0];
        if( 0 == file.size ) {
          alert( "Unable to proceed, the file you selected is empty." );
          $(this).val( "" );
        }

        $( "#{{ widget.full }}__import" ).button( { disabled: "" == $(this).val() } );
      } ); // end change

      $( "#{{ widget.full }}__form" ).bind( "submit", function(e) {
        e.preventDefault();
        var file = document.getElementById( "{{ widget.full }}__file" ).files[0];
        ajax_push(
          "dictionary_import",
          "new",
          file,
          function( request ) {
            if( 200 == request.status ) {
              var reader = new FileReader();
              reader.onload = function(e) {
                md5 = hex_md5( e.target.result );
                var args = new Object();
                args.md5 = md5;
                args.dictionary_id = {{ id }};
                var data = ajax_pull("dictionary_import", "process", args );

                var allow_proceed = false;
                if( undefined != data ) {
                  var err_count = data.error_count;
                  var html = '<table style="width:90%; margin-left:10%; margin-right:10%; text-align:left">';

                  if( 0 != err_count ) {
                    html += '<tr><td class="heading"> ERRORS </td></tr>';
                    var err_entries = data.error_entries;
                    for( var i = 0; i < err_count; i++ ) {
                      html += '<tr><td>' + err_entries[i] + '</td></tr>';
                    }
                  }
                  if( 0 < data.unique_word_count ) {
                    allow_proceed = true;
                  }

                  html += '<tr><td class="heading"> WORDS </td></tr>' +
                          '<tr><td>Number of existing dictionary words: ' + data.dictionary_word_count + '</td></tr>' +
                          '<tr><td>Number of duplicate input words: ' + data.duplicate_input_count + '</td></tr>' +
                          '<tr><td>Number of duplicate dictionary words: ' + data.duplicate_word_count + '</td></tr>' +
                          '<tr><td>Number of unique words: ' + data.unique_word_count + '</td></tr>';

                  html += '</table>';

                  html += '<div class="spacer" style="text-align: right">' +
                          '<button id="{{ widget.full }}__cancel" style="width:120px"' +
                          ( allow_proceed ? '' : ' disabled' ) +
                          '>Cancel</button>' +
                          '<button id="{{ widget.full }}__proceed" style="width:120px"' +
                          ( allow_proceed ? '' : ' disabled' ) +
                          '>Proceed</button>' +
                          '</div>';
                  $( "#{{ widget.full }}__results" ).html( html );
                  $( "#{{ widget.full }}__cancel" ).button();
                  $( "#{{ widget.full }}__proceed" ).button();

                  $( "#{{ widget.full }}__cancel" ).click( function () {
                    var args = new Object();
                    args.id = data.id;
                    if( ajax_push( "dictionary_import", "delete", args ) ) {
                      $(this).remove();
                      alert( "The operation was successful." );
                      slot_prev( {{ slot }} );
                    }
                  } ); // end cancel click

                  $( "#{{ widget.full }}__proceed" ).click( function () {
                    var args = new Object();
                    args.dictionary_id = {{ id }};
                    args.id = data.id;
                    if( ajax_push( "dictionary_import", "process", args ) ) {
                      $(this).remove();
                      alert( "The operation was successful." );
                      slot_prev( {{ slot }} );
                    }
                  } ); // end proceed click
                } // end if
              } // end onload
              reader.readAsBinaryString( file );
            } // end if
          } // end request
        ); // end push
      } ); // end submit bind
    } );
  </script>
{% endblock javascript %}

{% block widget %}
  <div class="ui-widget ui-widget-content app-widget-content">
    <div class="spacer">
      <p>
        Upload new words using a CSV (comma separated values) file where
        all words are enclosed by double quotes (&quot;). There must be
        only two columns: a word column and a language code column. The
        language code must be one of "en" (English) or "fr" (French). Files
        can be comprised of words of different languages ( e.g., one line of a
        csv file could be  "curtain","en" ).
      </p>
    </div>
    <form id="{{ widget.full }}__form" action="" enctype="multipart/form-data">
      <input type="hidden" name="MAX_FILE_SIZE" value="64000000" />
      <table>
        <tr>
          <td class="heading">
            <span class="title">CSV file to import:</span>
          </td>
          <td class="content">
            <input type="file"
                   id="{{ widget.full }}__file" name="file" />
          </td>
          <td class="content">
            <button id="{{ widget.full }}__import" style="width:150px;" disabled>Import</button>
          </td>
        </tr>
      </table>
    </form>
    <div id="{{ widget.full }}__results"></div>
  </div>
{% endblock widget %}
